@mixin radius($r) {
  -webkit-border-radius: $r;
  -moz-border-radius: $r;
  border-radius: $r;
}

@mixin radiusP($r) {
  -webkit-border-radius: unit($r, '%');
  -moz-border-radius: unit($r, '%');
  border-radius: unit($r, '%');
}

@mixin rotate($d) {
  -ms-transform: rotate(unit($d, deg));
  -webkit-transform: rotate(unit($d, deg));
  transform: rotate(unit($d, deg));
}

@mixin rotateOrigin($a,$b) {
  -ms-transform-origin: unit($a, '%') unit($b, '%');
  -webkit-transform-origin: unit($a, '%') unit($b, '%');
  transform-origin: unit($a, '%') unit($b, '%');
}

@mixin setAnimation($effect,$duration) {
  -webkit-animation: $effect unit($duration, s);
  -moz-animation: $effect unit($duration, s);
  -ms-animation: $effect unit($duration, s);
  animation: $effect unit($duration, s);
}

@mixin animDuration($s) {
  -webkit-animation-duration: $s;
  animation-duration: $s;
}

@mixin animDelay($s) {
  -webkit-animation-delay: $s;
  animation-delay: $s;
}

@mixin transition($s) {
  -webkit-transition: $s ease all;
  -moz-transition: $s ease all;
  -o-transition: $s ease all;
  transition: $s ease all;
}

@mixin scale($x,$y) {
  -ms-transform: scale($x, $y);
  -webkit-transform: scale($x, $y);
  transform: scale($x, $y);
}

@mixin transitionDelay($s) {
  -webkit-transition-delay: $s;
  transition-delay: $s;
}

@mixin easing_exponencial() {
  -webkit-transition-timing-function: cubic-bezier(0.990, 0.005, 1.000, 0.995);
  -moz-transition-timing-function: cubic-bezier(0.990, 0.005, 1.000, 0.995);
  -o-transition-timing-function: cubic-bezier(0.990, 0.005, 1.000, 0.995);
  transition-timing-function: cubic-bezier(0.990, 0.005, 1.000, 0.995);
}

@mixin animationEasing_exponencial() {
  -webkit-animation-timing-function: cubic-bezier(0.990, 0.005, 1.000, 0.995);
  -moz-animation-timing-function: cubic-bezier(0.990, 0.005, 1.000, 0.995);
  -o-animation-timing-function: cubic-bezier(0.990, 0.005, 1.000, 0.995);
  animation-timing-function: cubic-bezier(0.990, 0.005, 1.000, 0.995);
}

//================ss=================
@mixin valign-wrapper {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  align-items: center;
}

@mixin valign {
  display: block;
}

@mixin halign-wrapper {
  justify-content: center;
  -webkit-justify-content: center;
}

@mixin vhalign-wrapper {
  @include valign-wrapper();
  @include halign-wrapper();
}

@mixin flexCol {
  flex-direction: column;
  -webkit-flex-direction: column;
}

@mixin truncate {
  display: block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin linelenght($count) {
  display: -webkit-box !important;
  -webkit-line-clamp: $count;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

//==================================
@mixin filter($filter-type,$filter-amount) {
  -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
  -moz-filter: $filter-type+unquote('(#{$filter-amount})');
  -ms-filter: $filter-type+unquote('(#{$filter-amount})');
  -o-filter: $filter-type+unquote('(#{$filter-amount})');
  filter: $filter-type+unquote('(#{$filter-amount})');
  // grayscale      ex: filter: grayscale(100%);
  // sepia          ex: filter: sepia(100%);
  // saturate       ex: filter: saturate(0%);
  // hue-rotate     ex: filter: hue-rotate(45deg);
  // invert         ex: filter: invert(100%);
  // brightness     ex: filter: brightness(15%);
  // contrast       ex: filter: contrast(200%);
  // blur           ex: filter: blur(2px);
}

@mixin blur {
  filter: blur(10px);
  -webkit-filter: blur(10px);
  -moz-filter: blur(10px);
  -o-filter: blur(10px);
  -ms-filter: blur(10px);
  filter: url("data:image/svg+xml;utf9,<svg'%'20version='1.1''%'20xmlns='http://www.w3.org/2000/svg'><filter'%'20id='blur'><feGaussianBlur'%'20stdDeviation='10''%'20/></filter></svg>#blur");
  filter: progid:DXImageTransform.Microsoft.Blur(PixelRadius='10');
}

@mixin multiLineEllipsis($lineHeight,$lineCount) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: block !important;
  display: -webkit-box !important;
  line-height: $lineHeight;
  -webkit-line-clamp: $lineCount; /* number of lines to show */
  height: $lineHeight * $lineCount !important;
  -webkit-box-orient: vertical;
}

@mixin stroke($color) {
  text-shadow: -1px -1px 0 $color,
  1px -1px 0 $color,
  -1px 1px 0 $color,
  1px 1px 0 $color;
}

@mixin flipped {
  -moz-transform: scaleX(-1);
  -o-transform: scaleX(-1);
  -webkit-transform: scaleX(-1);
  transform: scaleX(-1);
  filter: FlipH;
  -ms-filter: "FlipH";
}
@mixin placeholderColor($color) {
  & ::-webkit-input-placeholder {
   color: $color;
  }
  & :-moz-placeholder {
    color: $color;
  }
  &::-moz-placeholder {
    color: $color;
  }
  & :-ms-input-placeholder {
    color: $color;
  }
}
@mixin rtlPlaceholder {
  & ::-webkit-input-placeholder {
    text-align: left;
      direction: ltr!important;
  }
  & :-moz-placeholder {
    direction: ltr!important;
  }
  &::-moz-placeholder {
    direction: ltr!important;
  }
  & :-ms-input-placeholder {
    direction: ltr!important;
  }
}
